{
  "hash": "22613ea60796acad8a80afc501962137",
  "result": {
    "markdown": "---\ntitle: \"Text analytics and alluvial plots in R\"\nauthor: \"Nyamisi Peter\"\ndate: \"2023-02-15\"\ncategories: [visualization, code]\nimage: \"alluvial.jpg\"\nbibliography: \"../blog.bib\"\n---\n\n\n# Introduction\nIn the previous post, we covered how to present textual information in wordcloud. In this post, we are going to extend what we have learned previous with a new visualization technique in town---alluvial plots. An alluvial diagram or alluvial plot is a type of visualization that shows changes in flow over time. Alluvial plots are commonly used to show how information flows from one source and feed to another source or destination. Several packages are used to create alluvial plots, but in this post we are going to learn how to use **ggalluvial** package [@ggalluvial] to make alluvial plots in R [@r]. If the package ks installed in your computer, you can simply download and install it from CRAN as;\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"alluvial\")\n```\n:::\n\n\nBefore we proceed, we need to load some packages, whose function we are going to use throughout this post. These packages are highlighted in the chunk below;\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(tidyverse)\nrequire(readxl)\nrequire(tm)           # for text mining\nrequire(SnowballC)    # for text stemming\nrequire(wordcloud)    # word-cloud generator\nrequire(RColorBrewer) # color palettes\nrequire(wordcloud2)\nrequire(ggalluvial)\n```\n:::\n\n\n# Data\n\nIn this post we are going to assess third year project student titles. The data has been organized and compiled in Excel spreadsheet. We can load this dataset into R session using  `read_excel()` function from **readxl** package [@readxl] and assign the loaded file as `student`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudent = read_excel(\"student_2020-23.xlsx\")\n```\n:::\n\n\nIts a good practice to explore the internal structure of the loaded data, though the `str` function is widely used for years, but @dplyr developed a `glimpse` function, which provide a nitty approach to look at the data and its associated variables;\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudent %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 163\nColumns: 5\n$ Name   <chr> \"Rashid Rahma A\", \"Muller Fransisca L\", \"Bitoye Mancef C\", \"Mma…\n$ gender <chr> \"F\", \"F\", \"F\", \"F\", \"F\", \"M\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\"…\n$ field  <chr> \"microbiology\", \"aquaculture\", \"ecosystem\", \"aquaculture\", \"soc…\n$ Title  <chr> \"Assessing the prevalence and intensity of parasitic infections…\n$ year   <dbl> 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 202…\n```\n:::\n:::\n\nThe printed output of the interval structure indicates that the file has five variables---name, gender, field, title and year. With exception of the year, which is numeric, the other variables are characters. \n\nThe result indicate that most of the students are doing their research in aquaculture field, social-economics, fishery and ecosystem (@fig-alluvial). Very few students are doing their research in other fields like chemical oceanography, conservation, microbiology and pollution for all four years of this study (@fig-alluvial). \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudent %>% \n  mutate(field = replace(field, field == \"GIS\" | field == \"policy\", \"fishery\"),\n         field = replace(field, field == \"plankton\", \"ecosystem\"),\n         field = replace(field, field == \"physical\", \"pollution\")) %>% \n  mutate(year = as.factor(year)) %>% \n  group_by(gender, field, year) %>% \n  count() %>% \n  ggplot(aes(axis1 = year, axis3 = gender, axis2 = field, y = n)) +\n  geom_alluvium(aes(fill = field), curve_type = \"sigmoid\", alpha = 0.6, width = 1/3)+\n  geom_stratum(aes(fill = field), width = 1/3)+\n  geom_label(stat = \"stratum\", aes(label = after_stat(stratum)), size = 3, alpha = 0.6)+\n  theme_void()+\n  theme(legend.position = \"none\")+\n  ggsci::scale_fill_futurama()+\n  scale_fill_brewer(palette = \"Dark2\")\n  # scale_x_discrete(expand = c(0.1,0.05))\n```\n\n::: {.cell-output-display}\n![The alluvial plot showing aquatic field specialization for students in their research between the year 2020 and 2023.](index_files/figure-html/fig-alluvial-1.png){#fig-alluvial width=672}\n:::\n:::\n\n\n\n\n\nIn summary, R language provide a good visualization tool for both quantitative and qualitative data. The alluvial plots is one of the best tool for visualizing the flow of qualitative variables of different categories.\n\n\n## Consultated references\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}